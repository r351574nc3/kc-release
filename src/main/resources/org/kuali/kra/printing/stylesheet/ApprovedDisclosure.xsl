<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 
	- see http://www.altova.com/stylevision for more information. -->
<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype"
	xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217"
	xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java"
	xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xbrldi="http://xbrl.org/2006/xbrldi"
	xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:altova="http://www.altova.com" xmlns:fo="http://www.w3.org/1999/XSL/Format"
	xmlns:svg="http://www.w3.org/2000/svg"
	exclude-result-prefixes="clitype fn iso4217 ix java link xbrldi xbrli xlink xs xsi altova">
	<xsl:output version="1.0" method="xml" encoding="UTF-8"
		indent="no" />
	<xsl:param name="SV_OutputFormat" select="'PDF'" />
	<xsl:variable name="XML" select="/" />
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-171453312-even"
				margin-left="0.60in" margin-right="0.60in" page-height="11in"
				page-width="8.50in">
				<fo:region-body margin-top="1.80in" margin-bottom="0.79in"
					column-count="1" column-gap="0.50in" />
				<fo:region-before region-name="even-page-header"
					overflow="hidden" extent="1.50in" />
				<fo:region-after region-name="even-page-footer"
					overflow="hidden" extent="0.49in" />
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-171453312-odd"
				margin-left="0.60in" margin-right="0.60in" page-height="11in"
				page-width="8.50in">
				<fo:region-body margin-top="1.80in" margin-bottom="0.79in"
					column-count="1" column-gap="0.50in" />
				<fo:region-before region-name="odd-page-header"
					overflow="hidden" extent="1.50in" />
				<fo:region-after region-name="odd-page-footer"
					overflow="hidden" extent="0.49in" />
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-171453312">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference
						master-reference="page-master-171453312-even" odd-or-even="even" />
					<fo:conditional-page-master-reference
						master-reference="page-master-171453312-odd" odd-or-even="odd" />
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96" />
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set" />
			<fo:page-sequence force-page-count="no-force"
				master-reference="page-master-171453312" initial-page-number="auto"
				format="1">
				<fo:static-content flow-name="odd-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:for-each select="$XML">
								<xsl:for-each select="ApprovedDisclosure">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="3.040in" />
										<fo:table-column column-width="1.780in" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<xsl:variable name="altova:CurrContextGrid_0A2561A0"
											select="." />
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Disclosure #:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="disclosureNumber">
																<xsl:variable name="value-of-template_07A01798">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01798),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01798" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01798" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Sequence #:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="sequenceNumber">
																<xsl:variable name="value-of-template_07A01878">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01878),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01878" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01878" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Reporter:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="person">
																<xsl:for-each select="fullName">
																	<xsl:variable name="value-of-template_07A01958">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A01958),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A01958" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A01958" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Expiration Date:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="expirationDate">
																<xsl:variable name="value-of-template_07A01A38">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01A38),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01A38" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01A38" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:for-each>
							</xsl:for-each>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="1"
									leader-length="100%" />
							</fo:block>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:for-each select="$XML">
								<xsl:for-each select="coiDisclosure">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="3.040in" />
										<fo:table-column column-width="1.780in" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<xsl:variable name="altova:CurrContextGrid_0A2561A0"
											select="." />
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Disclosure #:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="disclosureNumber">
																<xsl:variable name="value-of-template_07A01798">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01798),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01798" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01798" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Sequence #:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="sequenceNumber">
																<xsl:variable name="value-of-template_07A01878">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01878),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01878" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01878" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Reporter#:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="person">
																<xsl:for-each select="fullName">
																	<xsl:variable name="value-of-template_07A01958">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A01958),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A01958" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A01958" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-weight="bold" padding="2pt"
														display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>Expiration Date#:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="expirationDate">
																<xsl:variable name="value-of-template_07A01A38">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01A38),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01A38" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01A38" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:for-each>
							</xsl:for-each>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="1"
									leader-length="100%" />
							</fo:block>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="0.490000in"
						overflow="hidden" display-align="after">
						<fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed"
								border-spacing="2pt">
								<fo:table-column column-width="90%" />
								<fo:table-column column-width="10%" />
								<xsl:variable name="altova:CurrContextGrid_0A256980"
									select="." />
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell number-columns-spanned="2"
												padding="0" display-align="center">
												<fo:block text-align="left">
													<fo:block text-align="center">
														<fo:leader leader-pattern="rule" rule-thickness="1"
															leader-length="100%" color="black" />
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0"
												display-align="center">
												<fo:block text-align="center" />
											</fo:table-cell>
											<fo:table-cell font-size="10pt" font-weight="bold"
												padding="0" display-align="center">
												<fo:block text-align="right">
													<fo:inline font-weight="bold">
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number font-weight="bold" />
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows" />
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block />
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="0.490000in"
						overflow="hidden" display-align="after">
						<fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed"
								border-spacing="2pt">
								<fo:table-column column-width="90%" />
								<fo:table-column column-width="10%" />
								<xsl:variable name="altova:CurrContextGrid_0A256980"
									select="." />
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell number-columns-spanned="2"
												padding="0" display-align="center">
												<fo:block text-align="left">
													<fo:block text-align="center">
														<fo:leader leader-pattern="rule" rule-thickness="1"
															leader-length="100%" color="black" />
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0"
												display-align="center">
												<fo:block text-align="center" />
											</fo:table-cell>
											<fo:table-cell font-size="10pt" font-weight="bold"
												padding="0" display-align="center">
												<fo:block text-align="right">
													<fo:inline font-weight="bold">
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number font-weight="bold" />
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows" />
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block />
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<fo:inline font-size="large" font-weight="bold">
							<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
						</fo:inline>
						<fo:block />
						<xsl:for-each select="$XML">
							<fo:inline font-size="large" font-weight="bold">
								<xsl:text>&#160;</xsl:text>
							</fo:inline>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block text-align="center" margin="0pt">
								<fo:inline font-size="large" font-weight="bold">
									<xsl:text>Disclosure Details</xsl:text>
								</fo:inline>
							</fo:block>
							<fo:inline font-size="large" font-weight="bold">
								<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
							</fo:inline>
							<fo:block />
							<xsl:for-each select="ApprovedDisclosure">
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Reporter Details:</xsl:text>
								</fo:inline>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
									border-spacing="-1pt">
									<fo:table-column column-width="2.080in" />
									<xsl:for-each select="person">
										<fo:table-column column-width="5.220in" />
									</xsl:for-each>
									<xsl:variable name="altova:CurrContextGrid_0A3892F0"
										select="." />
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Full Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="fullName">
																<xsl:variable name="value-of-template_07A01B18">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01B18),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01B18" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01B18" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Address</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="address1">
																<xsl:variable name="value-of-template_07A01BF8">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01BF8),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01BF8" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01BF8" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Department</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="dirDept">
																<xsl:variable name="value-of-template_07A01CD8">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01CD8),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01CD8" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01CD8" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>School</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="school">
																<xsl:variable name="value-of-template_07A01DB8">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01DB8),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01DB8" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01DB8" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Office Phone</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="offPhone">
																<xsl:variable name="value-of-template_07A01E98">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01E98),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01E98" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01E98" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Email</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<xsl:for-each select="person">
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="email">
																<xsl:variable name="value-of-template_07A01F78">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_07A01F78),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_07A01F78" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_07A01F78" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</xsl:for-each>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows" />
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Certification Question :</xsl:text>
								</fo:inline>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="certificationQuestion">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="-1pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<xsl:variable name="altova:CurrContextGrid_0A389B30"
											select="." />
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Question ID</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Question</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Answer</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="certificationQuestion">
													<fo:table-row>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="questionID">
																	<xsl:variable name="value-of-template_07A02058">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02058),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02058" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02058" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="question">
																	<xsl:variable name="value-of-template_07A02138">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02138),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02138" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02138" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="answer">
																	<xsl:variable name="value-of-template_07A02218">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02218),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02218" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02218" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Project Details</xsl:text>
								</fo:inline>
								<fo:block />
								<xsl:for-each select="disclosureProjects">
									<fo:block>
										<fo:leader leader-pattern="space" />
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="-1pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<xsl:variable name="altova:CurrContextGrid_0AAC0EC8"
											select="." />
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ProjectTitle</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="projectTitle">
																<xsl:variable name="value-of-template_0A399530">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_0A399530),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_0A399530" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_0A399530" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ProjectSponsor</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="projectSponsor">
																<xsl:variable name="value-of-template_0A399610">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_0A399610),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_0A399610" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_0A399610" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ProjectStartDate</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="projectStartDate">
																<xsl:variable name="value-of-template_0A3996F0">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_0A3996F0),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_0A3996F0" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_0A3996F0" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ProjectEndDate</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<xsl:for-each select="projectEndDate">
																<xsl:variable name="value-of-template_0A3997D0">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																		test="contains(string($value-of-template_0A3997D0),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_0A3997D0" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_0A3997D0" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block>
										<fo:leader leader-pattern="space" />
									</fo:block>
								</xsl:for-each>
								<xsl:if test="coiDisclosureDetails">
										<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="-1pt">
											<fo:table-column column-width="proportional-column-width(1)" />
											<fo:table-column column-width="proportional-column-width(1)" />
											<xsl:variable name="altova:CurrContextGrid_0A3AD090"
												select="." />
											<fo:table-header start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>EntityName</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray"
														padding="0" display-align="center">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ConflictStatus</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-header>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<xsl:for-each select="coiDisclosureDetails">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray"
																padding="0" display-align="center">
																<fo:block text-align="left">
																	<xsl:for-each select="EntityName">
																		<xsl:variable name="value-of-template_0A3998B0">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when
																				test="contains(string($value-of-template_0A3998B0),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_0A3998B0" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_0A3998B0" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray"
																padding="0" display-align="center">
																<fo:block text-align="left">
																	<xsl:for-each select="ConflictStatus">
																		<xsl:variable name="value-of-template_0A399990">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when
																				test="contains(string($value-of-template_0A399990),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_0A399990" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_0A399990" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows" />
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block />
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:if>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Notes:</xsl:text>
								</fo:inline>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="disclosureNotes">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="-1pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
									
										<xsl:variable name="altova:CurrContextGrid_0A390C50"
											select="." />
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Comments</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Note Entry</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>UpdateTimestamp</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Update User</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="disclosureNotes">
													<fo:table-row>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="comments">
																	<xsl:variable name="value-of-template_07A02838">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02838),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="noteEntry">
																	<xsl:variable name="value-of-template_07A029F8">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A029F8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A029F8" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A029F8" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="updateTimestamp">
																	<xsl:variable name="value-of-template_07A02AD8">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02AD8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02AD8" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02AD8" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="updateUser">
																	<xsl:variable name="value-of-template_07A02BB8">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02BB8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02BB8" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02BB8" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Attachments:</xsl:text>
								</fo:inline>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="disclosureDocuments">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="-1pt">
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<fo:table-column column-width="proportional-column-width(1)" />
										<xsl:variable name="altova:CurrContextGrid_0A3974D0"
											select="." />
										<fo:table-header start-indent="0pt">
											<fo:table-row>
											<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Description</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Comments</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>UpdateTimestamp</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Update User</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="disclosureDocuments">
													<fo:table-row>
															<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="description">
																	<xsl:variable name="value-of-template_07A02838">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02838),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
															<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="comments">
																	<xsl:variable name="value-of-template_07A02838">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02838),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02838" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="updateTimestamp">
																	<xsl:variable name="value-of-template_07A02E58">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02E58),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02E58" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02E58" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray"
															padding="0" display-align="center">
															<fo:block text-align="left">
																<xsl:for-each select="updateUser">
																	<xsl:variable name="value-of-template_07A02F38">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template_07A02F38),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_07A02F38" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_07A02F38" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows" />
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block />
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline font-weight="bold">
									<xsl:text>Certification Details:</xsl:text>
								</fo:inline>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border="solid 1pt gray"
									border-spacing="-1pt">
									<fo:table-column column-width="2.090in" />
									<fo:table-column column-width="5.360in" />
									<xsl:variable name="altova:CurrContextGrid_0A397B90"
										select="." />
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Certified By:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="certifiedBy">
															<xsl:variable name="value-of-template_07A03018">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																	test="contains(string($value-of-template_07A03018),'&#x200B;')">
																	<fo:block>
																		<xsl:copy-of select="$value-of-template_07A03018" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:copy-of select="$value-of-template_07A03018" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Certification Text:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="certificationText">
															<xsl:variable name="value-of-template_0A399290">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																	test="contains(string($value-of-template_0A399290),'&#x200B;')">
																	<fo:block>
																		<xsl:copy-of select="$value-of-template_0A399290" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:copy-of select="$value-of-template_0A399290" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Certification TimeStamp:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray"
													padding="0" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="certificationTimestamp">
															<xsl:variable name="value-of-template_0A399370">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																	test="contains(string($value-of-template_0A399370),'&#x200B;')">
																	<fo:block>
																		<xsl:copy-of select="$value-of-template_0A399370" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:copy-of select="$value-of-template_0A399370" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows" />
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
							</xsl:for-each>
							<fo:block />
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal" />
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text" />
		<xsl:param name="text-length" />
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')" />
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)" />
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of
					select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')" />
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs" />
					<xsl:with-param name="text-length" select="$text-after-bs-length" />
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue" />
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')" />
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx" />
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger"
					select="string-length($sBeforePx) - $nLengthOfInteger + 1" />
				<xsl:variable name="nValuePx"
					select="substring($sBeforePx, $nPosOfInteger)" />
				<xsl:variable name="nValueIn"
					select="number($nValuePx) div number($altova:nPxPerIn)" />
				<xsl:variable name="nLengthBeforeInteger"
					select="string-length($sBeforePx) - $nLengthOfInteger" />
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue"
							select="substring-after($sValue, 'px')" />
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of
					select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText" />
		<xsl:variable name="sLen" select="string-length($sText)" />
		<xsl:variable name="cLast" select="substring($sText, $sLen)" />
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText"
							select="substring($sText, 1, $sLen - 1)" />
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
