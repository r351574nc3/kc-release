/* Table Script */ 
CREATE TABLE REPORT_CLASS ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	REPORT_CLASS_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL, 
	GENERATE_REPORT_REQUIREMENTS VARCHAR2(1) DEFAULT 'N' NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE REPORT_CLASS 
ADD CONSTRAINT PK_REPORT_CLASS 
PRIMARY KEY (REPORT_CLASS_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$REPORT_CLASS AS SELECT 
	REPORT_CLASS_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER, 
	GENERATE_REPORT_REQUIREMENTS
FROM REPORT_CLASS;
INSERT INTO REPORT_CLASS ( REPORT_CLASS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, GENERATE_REPORT_REQUIREMENTS ) 
VALUES ( 1, 'Fiscal', sysdate, user, 'Y' ); 
INSERT INTO REPORT_CLASS ( REPORT_CLASS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, GENERATE_REPORT_REQUIREMENTS ) 
VALUES ( 3, 'Intellectual Property', sysdate, user, 'Y' ); 
INSERT INTO REPORT_CLASS ( REPORT_CLASS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, GENERATE_REPORT_REQUIREMENTS ) 
VALUES ( 5, 'Procurement', sysdate, user, 'Y' ); 
INSERT INTO REPORT_CLASS ( REPORT_CLASS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, GENERATE_REPORT_REQUIREMENTS ) 
VALUES ( 2, 'Property', sysdate, user, 'y' ); 
INSERT INTO REPORT_CLASS ( REPORT_CLASS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, GENERATE_REPORT_REQUIREMENTS ) 
VALUES ( 4, 'Technical/Management', sysdate, user, 'Y' ); 

COMMIT;

/* Table Script */ 
CREATE TABLE REPORT ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	REPORT_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	FINAL_REPORT_FLAG CHAR(1) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE REPORT 
ADD CONSTRAINT PK_REPORT 
PRIMARY KEY (REPORT_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$REPORT AS SELECT 
	REPORT_CODE, 
	DESCRIPTION, 
	FINAL_REPORT_FLAG, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM REPORT;
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 62, 'DOE F 2050.11', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 8, 'Topical', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 9, 'Milestone', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 10, 'Executive Summary', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 11, 'Program Performance', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 12, 'NASA 533M', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 13, 'NASA 533Q', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 14, 'Management', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 15, 'Training Plan', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 16, 'Trainee Administrative', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 17, 'Administrative', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 18, 'Enrollment Count', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 19, 'Evaluation', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 20, 'Narrative', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 21, 'Proceedings', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 22, 'Thesis/Dissertation', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 23, 'Fellowship', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 24, 'DOE Notice of Energy RD&D', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 26, 'Publications', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 27, 'Challenge Grant', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 28, 'Letter', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 29, 'As required', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 30, 'Foreign trip report', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 31, 'Hazardous Substance Plan', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 32, 'Hazardous Waste Report', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 1, 'None', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 2, 'Informal Progress', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 3, 'Descriptive', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 4, 'Draft Final', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( -1, '', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 5, 'Final', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 41, 'Contract Funds Status', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 25, 'DOE F 1332.15', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 42, 'AASERT Report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 43, 'DOE F 4600.5', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 6, 'NSF Final Submission via Fastlane', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 44, 'DOE F 4600.6', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 7, 'Progress/Status', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 45, 'Key personnel staffing report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 33, 'SF 269 Expenditure Report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 34, 'SF 272 Cash Transaction Report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 35, 'Form provided by sponsor', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 36, 'DD 882', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 37, 'SF 294', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 38, 'SF 295', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 39, 'SF 1018', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 40, 'DD 1342', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 46, 'Management Plan', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 51, 'SF 270', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 47, 'Milestone Schedule/Plan/Status, 1332.3', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 48, 'Cost Plan, 1332.7', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 49, 'Cost Management Report, 1332.9', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 50, 'Progress/Status Draft', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 52, 'FAA Form 9550-5, Final Project Report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 53, 'Proprietary Report', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 54, 'Presentation', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 55, 'Invoice', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 56, 'NSF Fastlane Annual', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 57, 'NSF Fastlane Final', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 59, 'DOE F 241.3', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 58, 'Interim', 'N', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 60, 'SF 298 Report Documentation Page', 'Y', sysdate, user ); 
INSERT INTO REPORT ( REPORT_CODE, DESCRIPTION, FINAL_REPORT_FLAG, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 61, 'NASA Form 1679', 'Y', sysdate, user );

COMMIT;

/* Table Script */ 
CREATE TABLE FREQUENCY_BASE ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	FREQUENCY_BASE_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE FREQUENCY_BASE 
ADD CONSTRAINT PK_FREQUENCY_BASE 
PRIMARY KEY (FREQUENCY_BASE_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$FREQUENCY_BASE AS SELECT 
	FREQUENCY_BASE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM FREQUENCY_BASE;
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 2, 'Effective Date', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 6, 'As Required', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 4, 'Final Expiration Date', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( -1, '    ', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 1, 'Execution Date', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 3, 'Expiration date of obligation', sysdate, user ); 
INSERT INTO FREQUENCY_BASE ( FREQUENCY_BASE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 5, 'Effective date of obligation', sysdate, user ); 


COMMIT;



/* Table Script */ 
CREATE TABLE FREQUENCY ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	FREQUENCY_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	NUMBER_OF_DAYS NUMBER(3,0), 
	NUMBER_OF_MONTHS NUMBER(2,0), 
	REPEAT_FLAG CHAR(1) NOT NULL, 
	PROPOSAL_DUE_FLAG CHAR(1) NOT NULL, 
	INVOICE_FLAG CHAR(1) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL, 
	ADVANCE_NUMBER_OF_DAYS NUMBER(3,0), 
	ADVANCE_NUMBER_OF_MONTHS NUMBER(2,0));
/* Primary Key Constraint */ 
ALTER TABLE FREQUENCY 
ADD CONSTRAINT PK_FREQUENCY 
PRIMARY KEY (FREQUENCY_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$FREQUENCY AS SELECT 
	FREQUENCY_CODE, 
	DESCRIPTION, 
	NUMBER_OF_DAYS, 
	NUMBER_OF_MONTHS, 
	REPEAT_FLAG, 
	PROPOSAL_DUE_FLAG, 
	INVOICE_FLAG, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER, 
	ADVANCE_NUMBER_OF_DAYS, 
	ADVANCE_NUMBER_OF_MONTHS
FROM FREQUENCY;
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( -1, '  ', 0, 0,  ,  ,  , sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 44, '90 days after effective date', 90, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 7, 'Annual', 0, 12, 'Y', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 45, '60 days after effective date', 60, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 4, 'Scheduled', null, null, 'N', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 24, 'After each foreign trip', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 25, 'Unusual', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 26, 'Upon publication', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 27, '30 days after effective date', 30, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 5, 'One in advance', null, null, 'N', 'N', 'Y', sysdate, user, null, 1 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 6, 'Semi-annual', 0, 6, 'Y', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 9, 'Bi-monthly', 0, 2, 'Y', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 10, '30 days after expiration', 30, 0, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 11, '60 days after expiration', 60, 0, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 12, '90 days after expiration', 90, 0, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 13, 'At expiration', 0, 0, 'N', 'Y', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 14, 'As required', null, null, 'N', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 2, 'Monthly', 0, 1, 'Y', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 1, 'None', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 18, '4 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 4 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 34, '10 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 10 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 8, 'With renewal proposal', 0, 0, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 15, '30 days prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, 30, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 16, '60 days prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, 60, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 17, '90 days prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, 90, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 19, '5 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 5 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 20, '6 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 6 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 21, '7 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 7 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 22, '8 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 8 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 23, '9 months prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, null, 9 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 28, '4 months after expiration date', null, 4, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 29, '5 months after expiration date', null, 5, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 37, '75 days prior to expiration date', null, null, 'N', 'Y', 'N', sysdate, user, 75, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 33, '45 days after expiration', 45, null, 'N', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 31, '60 days after annual anniversary', 60, 12, 'Y', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 32, '30 days after annual anniversary', 30, 12, 'Y', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 3, 'Quarterly', 0, 3, 'Y', 'N', 'Y', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 35, '120 days prior to expiration', null, null, 'N', 'N', 'N', sysdate, user, 120, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 36, '45 days prior to expiration', null, null, 'N', 'Y', 'Y', sysdate, user, 45, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 30, '6 months after expiration date', null, 6, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 38, '30 days after award effective date', 30, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 39, '6 months after award effective date', null, 6, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 40, '9 months after award effective date', null, 9, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 41, 'Singular', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 42, '1 Year after expiration', null, 12, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 43, '75 days after expiration', 75, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 46, 'Quarterly - one month in advance', null, 3, 'Y', 'N', 'Y', sysdate, user, null, 1 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 47, 'Quarterly - two months in advance', null, 3, 'Y', 'N', 'Y', sysdate, user, null, 2 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 48, 'Quarterly - three months in advance', null, 3, 'Y', 'N', 'Y', sysdate, user, null, 3 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 49, 'Annual - one month in advance', null, 12, 'Y', 'N', 'Y', sysdate, user, null, 1 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 50, 'Annual - two months in advance', null, 12, 'Y', 'N', 'Y', sysdate, user, null, 2 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 51, 'Annual - three months in advance', null, 12, 'Y', 'N', 'Y', sysdate, user, null, 3 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 52, 'Semi-annual - one month in advance', null, 6, 'Y', 'N', 'Y', sysdate, user, null, 1 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 53, 'Semi-annual - two months in advance', null, 6, 'Y', 'N', 'Y', sysdate, user, null, 2 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 54, 'Semi-annual - three months in advance', null, 6, 'Y', 'N', 'Y', sysdate, user, null, 3 ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 55, '90 days prior to anniversaries', null, 12, 'Y', 'N', 'N', sysdate, user, 90, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 56, '15 Days After Each Quarter', 15, 3, 'Y', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 58, '15 days after expiration', null, 0, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 57, '10 months after effective date', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 
INSERT INTO FREQUENCY ( FREQUENCY_CODE, DESCRIPTION, NUMBER_OF_DAYS, NUMBER_OF_MONTHS, REPEAT_FLAG, PROPOSAL_DUE_FLAG, INVOICE_FLAG, UPDATE_TIMESTAMP, UPDATE_USER, ADVANCE_NUMBER_OF_DAYS, ADVANCE_NUMBER_OF_MONTHS ) 
VALUES ( 59, '60 days prior to anniversary date', null, null, 'N', 'N', 'N', sysdate, user, null, null ); 

COMMIT;

/* Table Script */ 
CREATE TABLE DISTRIBUTION ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	OSP_DISTRIBUTION_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE DISTRIBUTION 
ADD CONSTRAINT PK_DISTRIBUTION 
PRIMARY KEY (OSP_DISTRIBUTION_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$DISTRIBUTION AS SELECT 
	OSP_DISTRIBUTION_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM DISTRIBUTION;
INSERT INTO DISTRIBUTION ( OSP_DISTRIBUTION_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 3, 'Letter Only', sysdate, user ); 
INSERT INTO DISTRIBUTION ( OSP_DISTRIBUTION_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 2, 'Report + Letter', sysdate, user ); 
INSERT INTO DISTRIBUTION ( OSP_DISTRIBUTION_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 1, 'Report', sysdate, user ); 
INSERT INTO DISTRIBUTION ( OSP_DISTRIBUTION_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( -1, '  ', sysdate, user ); 
INSERT INTO DISTRIBUTION ( OSP_DISTRIBUTION_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 4, 'Sponsor Form', sysdate, user ); 

COMMIT;

/* Table Script */ 
CREATE TABLE CONTACT_TYPE ( 
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	CONTACT_TYPE_CODE NUMBER(3,0) NOT NULL, 
	DESCRIPTION VARCHAR2(200) NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE CONTACT_TYPE 
ADD CONSTRAINT PK_CONTACT_TYPE 
PRIMARY KEY (CONTACT_TYPE_CODE);
/* Foreign Key Constraint(s) */ 


/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$CONTACT_TYPE AS SELECT 
	CONTACT_TYPE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM CONTACT_TYPE;
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 6, 'Subcontracting Reporting Contact', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 5, 'Property Office Contact-1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 4, 'Intellectual Property Contact', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 3, 'Payment/Fiscal Reporting Contact', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 2, 'Awarding Office Contact--1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 1, 'Technical/Scientific Officer--1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( -1, ' ', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 8, 'Other', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 7, 'Final Report Submission Address ', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 9, 'Procurement Reporting Contact-1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 10, 'Close-out Contact', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 11, 'Report Submission Address--1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 12, 'Report Submission Address-2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 13, 'Administrative Contact--1', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 14, 'Awarding Office Contact--2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 15, 'Technical/Scientific Officer--2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 16, 'Property Office Contact-2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 17, 'Procurement Reporting Contact-2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 18, 'Procurement Reporting Contact-3', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 19, 'Procurement Reporting Contact-4', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 20, 'Procurement Reporting Contact-5', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 21, 'Property Office Contact-3', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 22, 'Administrative Contact--2', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 23, 'Technical/Scientific Officer--3', sysdate, user ); 
INSERT INTO CONTACT_TYPE ( CONTACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER ) 
VALUES ( 24, 'Report Submission Address-3', sysdate, user ); 


COMMIT;

/* Table Script */ 
CREATE TABLE AWARD_REPORT_TERMS ( 
	AWARD_REPORT_TERMS_ID NUMBER(12,0) NOT NULL, 
	AWARD_ID NUMBER(12,0) NOT NULL,
	AWARD_NUMBER VARCHAR2(10) NOT NULL, 
	SEQUENCE_NUMBER NUMBER(4,0) NOT NULL, 
	REPORT_CLASS_CODE NUMBER(3,0) NOT NULL, 
	REPORT_CODE NUMBER(3,0) NOT NULL, 
	FREQUENCY_CODE NUMBER(3,0) NOT NULL, 
	FREQUENCY_BASE_CODE NUMBER(3,0) NOT NULL, 
	OSP_DISTRIBUTION_CODE NUMBER(3,0) NOT NULL, 
	CONTACT_TYPE_CODE NUMBER(3,0) NOT NULL, 
	ROLODEX_ID NUMBER(6,0) NOT NULL, 
	DUE_DATE DATE NOT NULL, 
	NUMBER_OF_COPIES NUMBER(2,0),
	VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
	OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL, 
	UPDATE_TIMESTAMP DATE NOT NULL, 
	UPDATE_USER VARCHAR2(60) NOT NULL);
/* Primary Key Constraint */ 
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT PK_AWARD_REPORT_TERMS 
PRIMARY KEY (AWARD_REPORT_TERMS_ID);
/* Foreign Key Constraint(s) */ 
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK2_AWARD_REPORT_TERMS 
FOREIGN KEY (CONTACT_TYPE_CODE) 
REFERENCES CONTACT_TYPE (CONTACT_TYPE_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK3_AWARD_REPORT_TERMS 
FOREIGN KEY (OSP_DISTRIBUTION_CODE) 
REFERENCES DISTRIBUTION (OSP_DISTRIBUTION_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK10_AWARD_REPORT_TERMS 
FOREIGN KEY (FREQUENCY_CODE) 
REFERENCES FREQUENCY (FREQUENCY_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK11_AWARD_REPORT_TERMS 
FOREIGN KEY (FREQUENCY_BASE_CODE) 
REFERENCES FREQUENCY_BASE (FREQUENCY_BASE_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK9_AWARD_REPORT_TERMS 
FOREIGN KEY (REPORT_CODE) 
REFERENCES REPORT (REPORT_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK8_AWARD_REPORT_TERMS 
FOREIGN KEY (REPORT_CLASS_CODE) 
REFERENCES REPORT_CLASS (REPORT_CLASS_CODE);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK5_AWARD_REPORT_TERMS 
FOREIGN KEY (ROLODEX_ID) 
REFERENCES ROLODEX (ROLODEX_ID);
ALTER TABLE AWARD_REPORT_TERMS 
ADD CONSTRAINT FK_AWARD_REPORT_TERMS 
FOREIGN KEY (AWARD_ID) 
REFERENCES AWARD (AWARD_ID);
/* View for Coeus compatibility */ 
CREATE OR REPLACE VIEW OSP$AWARD_REPORT_TERMS AS SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER, 
	REPORT_CLASS_CODE, 
	REPORT_CODE, 
	FREQUENCY_CODE, 
	FREQUENCY_BASE_CODE, 
	OSP_DISTRIBUTION_CODE, 
	CONTACT_TYPE_CODE, 
	ROLODEX_ID, 
	DUE_DATE, 
	NUMBER_OF_COPIES, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM AWARD_REPORT_TERMS;
COMMIT;