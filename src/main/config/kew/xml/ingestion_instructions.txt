run the following to clear out the kew tables 

delete from krew_rule_t;
delete from krew_rule_tmpl_t;
CREATE TABLE TMP_DOC_TYP_T AS
SELECT DOC_TYP_ID, DOC_TYP_NM FROM KREW_DOC_TYP_T;
delete from krew_doc_typ_t;
commit;


the kew files are organized in a hierarchy.
       
You can zip each folder and use the rice ingester to reingest the hierarchy.
You must start with the lowest numbered folder and work your way down.

Given the current implementation of the rice ingester you could also zip up all the numbered directories
and feed that into the rice ingester.  That will ingest everything in the
correct order b/c of the current directory names.  (this may not work across platforms)...

Note: Currently, the directory structure is flat to allow the xml files
to be simply zipped.  Organizing the files like base_dir/1/2/3/4/5 does not
work with the current implementation of the rice ingester.

After ingesting kew files run the following to remap orphaned documents to their new doc types.:

UPDATE KREW_DOC_HDR_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_HDR_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_HDR_ID = DH.DOC_HDR_ID)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_HDR_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_HDR_ID = DH.DOC_HDR_ID);

UPDATE KREW_DOC_TYP_APP_DOC_STAT_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_APP_DOC_STAT_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_STAT_NM = DH.DOC_STAT_NM)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_APP_DOC_STAT_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_STAT_NM = DH.DOC_STAT_NM);

UPDATE KREW_DOC_TYP_ATTR_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_ATTR_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_TYP_ATTRIB_ID = DH.DOC_TYP_ATTRIB_ID)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_ATTR_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_TYP_ATTRIB_ID = DH.DOC_TYP_ATTRIB_ID);

UPDATE KREW_DOC_TYP_PLCY_RELN_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_PLCY_RELN_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_PLCY_NM = DH.DOC_PLCY_NM)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_PLCY_RELN_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_PLCY_NM = DH.DOC_PLCY_NM);

UPDATE KREW_DOC_TYP_PROC_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_PROC_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_TYP_PROC_ID = DH.DOC_TYP_PROC_ID)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_DOC_TYP_PROC_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.DOC_TYP_PROC_ID = DH.DOC_TYP_PROC_ID);

UPDATE KREW_RTE_NODE_T dh SET DOC_TYP_ID = (SELECT NDT.DOC_TYP_ID
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_RTE_NODE_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.RTE_NODE_ID = DH.RTE_NODE_ID)
WHERE EXISTS (SELECT 's'
FROM TMP_DOC_TYP_T ODT, KREW_DOC_TYP_T NDT, KREW_RTE_NODE_T DH2
WHERE DH2.DOC_TYP_ID = ODT.DOC_TYP_ID AND ODT.DOC_TYP_NM = NDT.DOC_TYP_NM
AND DH2.RTE_NODE_ID = DH.RTE_NODE_ID);

COMMIT;