<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <!-- 
       The default build of this project targets a servlet 2.5 web container.  
  -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali.kra</groupId>
    <artifactId>kc-parent</artifactId>
    <version>3.2-SNAPSHOT</version>
  </parent>
  <artifactId>kc-web</artifactId>
  <packaging>war</packaging>
  <name>Kuali Coeus Web</name>
  <description>The Kuali Coeus (KC) project is building a comprehensive system to manage the complexities of research administration that fully addresses the needs from the faculty researcher through grants administration to federal funding agencies. KC is using MITâ€™s proven COEUS system as its baseline design, filling in missing functionality from COEUS, and updating its technical architecture for vendor independence and easier integration with other administration systems.</description>
  <url>http://kuali.org/kc</url>

  <build>
    <plugins>
      <plugin>
        <groupId>net.sourceforge.maven-taglib</groupId>
        <artifactId>maven-taglib-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>kc-core</artifactId>
      <version>{project.version}</version>
    </dependency>
  </dependencies>
  
  <profiles> 
    <!-- 
         This profile handles unpacking and cleaning of the rice web content and is on by default but can be
         turned off by toggling the activeByDefault flag.  This is useful to test changes to rice files locally.
    -->
    <profile>
      <id>rice-web</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- 
               Using dependency unpack as opposed to war overlay for a number of reasons
               1) overlay requires the packaging phase - tomcat plugin run goal does not work with overlays (used by launch files).
               2) we could force our launch files to use run-exploded or run-war but that is too slow.
               3) overlayed resources are not placed in a directory (like generated code) making
               it difficult for developers to look at the overlayed resources
               4) our unit test's jetty lifecycle assume all web content resides in src/main/webapp (see point 3)
          -->
          <!-- 
               Having unpacked resources placed in src/main/webapp as opposed to target directory for the following reasons
               1) we could configure additional web resource directories for war packaging (via the war plugin)
               (ex: target/generated/rice-web but this does not work with either the tomcat or jetty plugins' run goals.
               2) we could force our launch files to use run-exploded or run-war but that is too slow.
               3) our unit test's jetty lifecycle assume all web content resides in src/main/webapp
               
               This seems like the way to go (placing unpacked content in target like other generated code) if we could find a
               solution for the tomcat/jetty plugins used by our launch files. This rice-web content could be cleaned and unpacked again
               similar to other generated code.  If we did this we would not have to maintain a separate clean step to delete the
               unpacked rice web content.  It would also be nicer in that all unpacked generated code would be place in a single
               directory rather than merged into our source tree.  This has the added benefit that the rice content would
               automatically be excluded from svn.  Currently, we have to use svn:ignore on individual rice folders & files.
               
               Update:  for jetty support with multiple web resource directories see: 
               http://docs.codehaus.org/display/JETTY/Multiple+WebApp+Source+Directory
          -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.1</version>
            <executions>
              <execution>
                <id>unpack-rice-web</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>	              
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.kuali.rice</groupId>
                      <artifactId>rice-web</artifactId>
                      <version>${rice.version}</version>
                      <type>war</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>src/main/webapp</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                  <includes>*/**</includes>
                  <excludes>${rice.web.excludes}</excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <!-- cleans out rice unpacked rice web content -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>2.4.1</version>
            <executions>
              <execution>
                <id>delete-rice-web</id>
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <filesets>
                    <fileset>
                      <directory>src/main/webapp</directory>
                      <includes>
                        <include>index.jsp</include>
                        <include>portal.jsp</include>
                        <include>kcb/</include>
                        <include>ken/</include>
                        <include>kew/</include>
                        <include>kim/</include>
                        <include>kr/</include>
                        <include>ksb/</include>
                        <include>rice-portal/</include>
                        <include>WEB-INF/jsp/dummy_login.jsp</include>
                        <include>WEB-INF/jsp/recurseCheckTabHighlight.jsp</include>
                        <include>WEB-INF/jsp/recurseRowDisplay.jsp</include>
                        <include>WEB-INF/tags/kew/</include>
                        <include>WEB-INF/tags/kim/</include>
                        <include>WEB-INF/tags/kr/</include>
                        <include>WEB-INF/tags/rice-portal/channel/administration/</include>
                        <include>WEB-INF/tags/rice-portal/channel/main/</include>
                        <include>WEB-INF/tags/rice-portal/channel/portalChannelBottom.tag</include>
                        <include>WEB-INF/tags/rice-portal/channel/portalChannelTop.tag</include>
                        <include>WEB-INF/tags/rice-portal/administrationTab.tag</include>
                        <include>WEB-INF/tags/rice-portal/iframePortletContainer.tag</include>
                        <include>WEB-INF/tags/rice-portal/immutableBar.tag</include>
                        <include>WEB-INF/tags/rice-portal/maintenanceTab.tag</include>
                        <include>WEB-INF/tags/rice-portal/portalBottom.tag</include>
                        <include>WEB-INF/tags/rice-portal/portalLink.tag</include>
                        <include>WEB-INF/tags/rice-portal/portalTop.tag</include>
                      </includes>
                      <excludes>
                        <exclude>**/.svn</exclude>
                        <exclude>**/.svn/**</exclude>
                      </excludes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
              <execution>
                <id>delete-help</id>
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <filesets>
                    <fileset>
                      <directory>src/main/webapp/static</directory>
                      <includes>
                        <include>help/</include>
                      </includes>
                      <excludes>
                        <exclude>**/.svn</exclude>
                        <exclude>**/.svn/**</exclude>
                      </excludes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- 
         This profile defines plugins for running kc/rice in a bundled configuration.
    -->
    <profile>
      <id>server-bundled</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <configuration>
              <webAppConfig>
                <contextPath>${default.context.path}</contextPath>
              </webAppConfig>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>tomcat-maven-plugin</artifactId>
            <configuration>
              <path>${default.context.path}</path>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- 
         This profile defines plugins for running kc/rice in an embedded configuration.
    -->
    <profile>
      <id>server-embedded</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.mortbay.jetty</groupId>
              <artifactId>jetty-maven-plugin</artifactId>
              <configuration>
                <webAppConfig>
                  <contextPath>${default.context.path}</contextPath>
                </webAppConfig>
                <contextHandlers>
                  <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                    <!-- this is kind of hacky not sure if there is a better way -->
                    <war>${settings.localRepository}/org/kuali/rice/rice-web/${rice.version}/rice-web-${rice.version}.war</war>
                    <contextPath>/kr-dev</contextPath>
                  </contextHandler>
                </contextHandlers>
              </configuration>
            </plugin>			
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    
  </profiles>
</project>
